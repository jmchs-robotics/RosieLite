// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5933.Rosieppbs.subsystems;

import org.usfirst.frc5933.Rosieppbs.LidarLitePWM;
import org.usfirst.frc5933.Rosieppbs.RobotMap;
import org.usfirst.frc5933.Rosieppbs.commands.*;
import edu.wpi.first.wpilibj.Jaguar;
import edu.wpi.first.wpilibj.SpeedController;

import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class BallLauncher extends Subsystem {
    private int flyWheelAdjustmentCount;
    public static final double kFlyWheelAdjustmentIncrement = 0.10;

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final SpeedController flyWheel = RobotMap.ballLauncherFlyWheel;
    private final LidarLitePWM spock = RobotMap.ballLauncherSpock;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    
    public void resetFlyWheelAdjustment() {
        flyWheelAdjustmentCount = 0;
    }
    
    private double getFlyWheelAdjustment() {
        return flyWheelAdjustmentCount * kFlyWheelAdjustmentIncrement;
    }

    public void increaseFlyWheelAdjustment() {
        ++flyWheelAdjustmentCount;
    }
    
    public void decreaseFlyWheelAdjustment() {
        --flyWheelAdjustmentCount;
    }
    
    public void set(double speed) {
        flyWheel.set(speed + getFlyWheelAdjustment());
    }
}
