// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc5933.Rosieppbs.commands;

import edu.wpi.first.wpilibj.command.Command;

import org.usfirst.frc5933.Rosieppbs.Robot;

/**
 *
 */
public class DefaultTeleopCommand extends Command {
    private boolean tapped = false;
    private double moveDistance = 0.2;

    private boolean DEBUG = false;
    
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public DefaultTeleopCommand() {

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.driveTrain);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }
    
    private void do_some_opaque_operation() {

        if ((Robot.oi.getXBoxJoystick().getPOV() == 270) && !tapped) {
            Robot.driveTrain.turn_left(moveDistance);
            tapped = true;
        }

        if ((Robot.oi.getXBoxJoystick().getPOV() == 90) && !tapped) {
            Robot.driveTrain.turn_right(moveDistance);
            tapped = true;
        }

        if ((Robot.oi.getXBoxJoystick().getPOV() == 0) && !tapped) {
            if (moveDistance < 1.0) {
                moveDistance += 0.1;
            } else {
                if (DEBUG) {
                    System.out.println("Maximum value achieved.");
                }
            }
            if (DEBUG) {
                System.out.println("The robot will now adjust at " + moveDistance + " input value.");
            }
            tapped = true;
        }
        if ((Robot.oi.getXBoxJoystick().getPOV() == 180) && !tapped) {
            if (moveDistance > 0.3) {
                moveDistance -= 0.1;
            } else {
                if (DEBUG) {
                    System.out.println("Minimum value achieved.");
                }
            }
            if (DEBUG) {
                System.out.println("The robot will now adjust at " + moveDistance + " input value.");
            }
            tapped = true;
        }
        if ((Robot.oi.getXBoxJoystick().getPOV() == -1) && tapped) {
            tapped = false;
        }
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
        Robot.driveTrain.arcadeDrive(Robot.oi.getXBoxJoystick());
        do_some_opaque_operation();
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
        Robot.driveTrain.stop();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
        end();
    }
}
